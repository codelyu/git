<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxt.sys.mapper.PermissionMapper">
	<resultMap id="BaseResultMap"
		type="com.sxt.sys.domain.Permission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="pid" property="pid" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="percode" property="percode" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="icon" property="icon" jdbcType="VARCHAR" />
		<result column="href" property="href" jdbcType="VARCHAR" />
		<result column="target" property="target" jdbcType="VARCHAR" />
		<result column="spread" property="spread" jdbcType="INTEGER" />
		<result column="ordernum" property="ordernum"
			jdbcType="INTEGER" />
		<result column="available" property="available"
			jdbcType="INTEGER" />
		<result column="parent" property="parent" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, pid, type, percode, name, icon, href, target, spread,
		ordernum,
		available, parent
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sys_permission
		where id =
		#{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.sxt.sys.domain.Permission">
		insert into sys_permission (id, pid, type,
		percode, name,
		icon,
		href, target, spread,
		ordernum, available, parent
		)
		values
		(#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER},
		#{type,jdbcType=VARCHAR},
		#{percode,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
		#{href,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR},
		#{spread,jdbcType=INTEGER},
		#{ordernum,jdbcType=INTEGER},
		#{available,jdbcType=INTEGER}, #{parent,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.sxt.sys.domain.Permission">
		insert into sys_permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="percode != null">
				percode,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="icon != null">
				icon,
			</if>
			<if test="href != null">
				href,
			</if>
			<if test="target != null">
				target,
			</if>
			<if test="spread != null">
				spread,
			</if>
			<if test="ordernum != null">
				ordernum,
			</if>
			<if test="available != null">
				available,
			</if>
			<if test="parent != null">
				parent,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="percode != null">
				#{percode,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				#{icon,jdbcType=VARCHAR},
			</if>
			<if test="href != null">
				#{href,jdbcType=VARCHAR},
			</if>
			<if test="target != null">
				#{target,jdbcType=VARCHAR},
			</if>
			<if test="spread != null">
				#{spread,jdbcType=INTEGER},
			</if>
			<if test="ordernum != null">
				#{ordernum,jdbcType=INTEGER},
			</if>
			<if test="available != null">
				#{available,jdbcType=INTEGER},
			</if>
			<if test="parent != null">
				#{parent,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.sxt.sys.domain.Permission">
		update sys_permission
		<set>
			<if test="pid != null">
				pid = #{pid,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="percode != null">
				percode = #{percode,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				icon = #{icon,jdbcType=VARCHAR},
			</if>
			<if test="href != null">
				href = #{href,jdbcType=VARCHAR},
			</if>
			<if test="target != null">
				target = #{target,jdbcType=VARCHAR},
			</if>
			<if test="spread != null">
				spread = #{spread,jdbcType=INTEGER},
			</if>
			<if test="ordernum != null">
				ordernum = #{ordernum,jdbcType=INTEGER},
			</if>
			<if test="available != null">
				available = #{available,jdbcType=INTEGER},
			</if>
			<if test="parent != null">
				parent = #{parent,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.sxt.sys.domain.Permission">
		update sys_permission
		set pid = #{pid,jdbcType=INTEGER},
		type = #{type,jdbcType=VARCHAR},
		percode = #{percode,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		icon = #{icon,jdbcType=VARCHAR},
		href =
		#{href,jdbcType=VARCHAR},
		target = #{target,jdbcType=VARCHAR},
		spread =
		#{spread,jdbcType=INTEGER},
		ordernum = #{ordernum,jdbcType=INTEGER},
		available = #{available,jdbcType=INTEGER},
		parent =
		#{parent,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="queryPermissionByUid" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select DISTINCT t1.* from sys_permission t1 inner join
		sys_role_permission
		t2 on t1.id=t2.pid inner join sys_role_user t3 on
		t2.rid=t3.rid where
		uid = #{value} 
	</select>
	<select id="queryPermissionForList" resultMap="BaseResultMap"
		parameterType="com.sxt.sys.domain.Permission">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		<where>
			<if test="type!=null">
				and type = #{type}
			</if>
			<if test="available!=null">
				and available=#{available}
			</if>
			<if test="id!=null">
				and (id=#{id} or pid = #{id})
			</if>
			<if test="name!=null">
				and name like concat("%",#{name},"%")
			</if>

		</where>
	</select>
	<!-- 根据角色ID查询权限 -->
	<select id="queryPermissionByRoleId" resultMap="BaseResultMap">
		select t1.* from
		sys_permission t1 inner join sys_role_permission t2
		on(t1.id=t2.pid)
		where t2.rid=#{value}
	</select>
	
	<!-- 根据用户id查询菜单 -->
	<select id="queryPermissionByUserIdForList"
		resultMap="BaseResultMap">
		select distinct t1.* from sys_permission t1 inner join
		sys_role_permission t2 inner join sys_role_user t3
		on(t1.id=t2.pid and
		t2.rid=t3.rid)
		where t3.uid=#{param1} and t1.type=#{param2}
	</select>
</mapper>